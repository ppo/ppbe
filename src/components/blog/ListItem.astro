---
// TODO: import { getImage, Image } from 'astro:assets';

import Time from '@/components/Time.astro';
import { isFutureArticle } from '@/lib/blog';
import { FORMATS } from '@/lib/format';


interface Props {
  article: CollectionEntry<'blog'>,
};
const { article } = Astro.props;
const { title, subtitle, abstract, category, featured, hero, publishedAt } = article.data;
const isFuture = isFutureArticle(article);
// BEGIN: ALTERNATIVE VERSION
// const {
//   article: {
//     data: { title, abstract, hero, publishedAt, createdAt },
//   },
// } = Astro.props;
// END: ALTERNATIVE VERSION

// TODO: const heroImage = hero?.image ? await import(hero.image) : null;
// TODO: const heroImage = hero?.image ? await getImage({src: hero.image}) : null;
---


<article class:list={[{featured, future: isFuture}]}>
  <a href={isFuture ? null : article.url} class="block flex flex-col sm:flex-row justify-left">
    {/* TODO: {heroImage && (<Image src={heroImage} alt={hero.alt} class="…" />)} */}
    {hero?.image && (
      <img src={hero.image} alt={hero.alt} class="w-full sm:w-40 sm:shrink-0 object-scale-down" />
    ) || (
      <span class="sm:w-40 sm:shrink-0"></span>
    )}
    <div class="mt-3 px-2 pt-0 pb-2 sm:mt-0 sm:px-4 sm:pt-2">
      <div class="text-sm text-dim">
        <Time date={publishedAt} format={FORMATS.DATE} title="Publication Date" />
        {category && (<>• {category}</>)}
      </div>
      <h2 class="text-lg font-semibold my-1">{title}</h2>

      {isFuture && (
        <p class="text-sm text-text my-0 italic">
          Not yet published.
          Come back on <Time date={article.data.publishedAt} format={FORMATS.DATETIME} />.
        </p>
      )}
      {(!isFuture && (subtitle || abstract)) && (
      <p class="text-sm text-text my-0">
        <strong>{subtitle}</strong><br>
        {abstract}
      </p>
      )}
    </div>
  </a>
</article>


<style>
  @reference "@/styles/global.css";

  h2 {
    font-size: 1.25em;
  }

  a:hover {
    text-decoration: none;
  }

  .featured {
    border: 1px solid var(--color-gray-300);
  }

  .future {
    opacity: 0.5;

    a:hover {
      @apply text-primary;
      cursor: not-allowed;
    }
  }
</style>
